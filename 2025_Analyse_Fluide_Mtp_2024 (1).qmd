---
title: "2024 - Analyse des fluides - centre Occitanie-Montpellier"
author: "N. Hilgert et I. Sanchez (INRAE MISTEA)"
date: today
format: 
  html: 
    toc: true
    number-sections: true
    toc-location: left
    embed-resources: true    
---


# Objectifs

* Importation des différents fichiers:
    - La Gaillarde.xlsx: description des batiments
    - 2025-Enquete occupation-MISTEA-20250709.xlsx: fichier d'occupation des locaux avec répatition INRAE/IA
    - Synthèse evolutions Consommations  10-02-2025_IS.xlsx: fichier de consommations des différentes énergies
* quelques graphiques descriptfs
* Insertion des calculs de consommations des 5 énergies (élec, gaz, eau, fod, reseau)
* Construction de fichiers par jointure de consommation par batiment/m2, par unité /m2, par batiment et unité /m2
* Définition d'une ventilation du coût par energie et pour chauque unité INRAE

```{r}
#| include: false
#| warning: false
#| message: false
library(knitr)
knitr::opts_chunk$set(echo = TRUE)

rm(list=objects())

if(Sys.info()["nodename"] == "MISTEA-PRUNUS"){
    project.dir <- "C:/Users/sanchez/Documents/INRA MISTEA/analyse_fluides_mtp"
} else if (Sys.info()["nodename"] == "mistea-sureau"){
    project.dir <- "/home/sanchezi/Documents/INRA/UMR MISTEA/analyse_fluides_mtp"
} else if (Sys.info()["nodename"] == "MISTEA-ABELIA"){
    project.dir <- "C:/Users/hilgert.MTP/Documents/NadineMaia2021/labo/cr/UMR/GESTION/UMRadmin/2025/FluidesCentre/analyse_fluides_mtp"
}
project.dir <- "/Users/abonin/Desktop/Etude Jema"
stopifnot(file.exists(project.dir))

data.dir <- paste0(project.dir, "/data")
script.dir <- paste0(project.dir, "/R")
```


```{r libraries}
#| include: false
#| warning: false
#| message: false
  # Chargement des librairies
  library(dplyr)
  library(tidyr)
  library(ggplot2)
  library(plotly)
  library(DT)
  library(readxl)
  library(viridisLite)
  library(RColorBrewer)
  library(gridExtra)
  library(gtsummary)
  library(writexl)
  library(stringr)
  library(plotly)

```


# Importation des données

## fichier Etat énergétique des batiments
```{r}
#| warning: false
#| message: false
sheets.in<-excel_sheets(paste0(data.dir,"/La Gaillarde.xlsx"))

# Nombre d'onglets à importer
length(sheets.in)
print(sheets.in)

myetat<-read_excel(path = paste0(data.dir,"/La Gaillarde.xlsx"),
                   sheet=1,
                   na=c("ND","NA")
                   )

str(myetat)
colnames(myetat)<-c("Site","num_bat","nom_bat","Clos/couvert","securite",
                    "fonctionnement","etat_energie","confort d'usage adéquat aux besoins")
```

Etat énergétique des batiments du centre de la gaillarde, note variant de 0 à 5 avec 5 meilleure isolation.

## Fichier Occupation des batiments par agents INRAE

::: {style="background-color:rgba(0, 255, 0,0.1); text-align:left; vertical-align: center; padding:10px 0;"}
METRAGES AJUSTES: partage des locaux lorsque le batiment (ou l'étage) est partagé entre plusieurs unités.
:::

```{r}
#| warning: false
#| message: false

myfile<-"2025-Enquete occupation-MISTEA-20250709.xlsx"
sheets.in<-excel_sheets(paste0(data.dir,"/",myfile))
# Nombre d'onglets à importer
length(sheets.in)
print(sheets.in)

#-------------------------#
# Feuille 2: Occupation
#-------------------------#
myoccup<-as.data.frame(read_excel(path = paste0(data.dir,"/",myfile),
                   sheet=2,
                   na=c("ND","NA")
                   ))
colnames(myoccup)

myoccup<-myoccup[,-c(14,15)]

colnames(myoccup)<-c("Site","num_bat","Local","Nom_usuel_local","Libell_fichiersource/DIE",
                     "Referencefichiersource/DIE","Surface_sol","Unite",
                     "Nom Tiers accueillis_31/03/2024","Nom_occupants",
                     "Nombre_unites","Surface_ajus","Typologie UMR")
colnames(myoccup)

# Comptage du nombre de personnes par bureau à partir de la colonne "Nom_occupants"
# attention au différent vocabulaire pour séparer qd plusieurs personnes
# attention, à revoir car il y a les stagiaires et les personnels Institut Agro
# Après je prendrais les infos de l'onglet "Effectifs" quand j'aurais l'info du batiment
# + rajout de qqs règles d'execption
myoccup<- myoccup %>%
            group_by(Site, num_bat) %>%
            mutate(count_pers1=str_count(Nom_occupants,",|/| et | - |\\+|;"),
                   count_pers0=count_pers1 + 1,
                   count_pers0=if_else(str_count(Nom_occupants,"Locaux") > 0,0,count_pers0),
                   count_pers0=if_else(str_count(Nom_occupants,"véhicules|\\?|COMMUN") > 0,
                                      0,count_pers0),
                   count_pers0=if_else(str_count(Nom_occupants,"Salle|salle") > 0,
                                      0,count_pers0),
                   count_pers0=if_else(str_count(Nom_occupants,"4 personnes")> 0,4,count_pers0)
                   ) %>%
            select(-count_pers1)

datatable(myoccup)

# agrégation par batiment pour avoir l'occupation totale
myoccup1<- myoccup %>%
            group_by(Site, num_bat) %>%
            summarize(metrage_batiment=sum(Surface_sol,na.rm=TRUE))

# agrégation par batiment et unité pour avoir l'occupation totale + occupation INRAE
myoccup2<- myoccup %>%
            group_by(Site, num_bat, Unite) %>%
            summarize(metrage_unite=sum(Surface_sol,na.rm=TRUE),
                      metrage_unite_ajus=sum(Surface_ajus,na.rm=TRUE),
                      pers_unite=sum(count_pers0,na.rm=TRUE))

# jointure dans myoccup2
myoccup2<- left_join(myoccup2,myoccup1,by=c("Site", "num_bat"))

#-------------------------#
# Feuille 3: Effectifs
#-------------------------#
myeffectif<-as.data.frame(read_excel(path = paste0(data.dir,"/",myfile),
                             sheet=3,na=c("ND","NA")))
myeffectif<-myeffectif[,-c(9,10)]
names(myeffectif)[1] <- "Unite"

myeffectif<-myeffectif %>%
              mutate(num_bat=substr(Bat,2,5))

count.eff<-myeffectif %>%
            group_by(num_bat,Unite) %>%
            mutate(num_bat=if_else(Unite == "Associé BAP","0070",num_bat)) %>%
            summarize(count_pers=n())

print(as.data.frame(count.eff))

```

Nombre d'unités présentes dans le fichier d'occupation: `r length(unique(myoccup2$Unite))`

```{r}
sort(unique(myoccup2$Unite))

# On ne conserve que les unités INRAE (i.e. on supprime les occurences du mot "IA")
# On supprime le logement de fonction innocuppé dont le nom de batiment est INRAE
# On passe tous les noms d'unité en majuscule pour cohérence d'orthographe
myoccup2 <- myoccup2 %>%
              mutate(
                    Unite = toupper(Unite),
                    Unite=replace(Unite,which(Unite %in% c('SDAR MUTUALISÉ','SDAR Mutualisé')),values="SDAR"),
                    Unite=replace(Unite,which(Unite == "LEPSE/IPSIM"),values="LEPSE/IPSiM")
              ) 
myoccup3<-myoccup2[ !myoccup2$Unite %in% c("IA","IA COM","INRAE"),]

table(myoccup3$Site)

# dataset d'occupation centre de la gaillarde
myoccup.gaillarde<-myoccup3[grep("Gaillarde",myoccup2$Site),]

# suppression des unite == NA
myoccup.gaillarde<-na.omit(myoccup.gaillarde)

myoccup.gaillarde<-myoccup.gaillarde %>%
                    mutate(
                      Unite=toupper(Unite),
                      Unite=replace(Unite,which(Unite %in% c('SDAR MUTUALISÉ','SDAR Mutualisé')),values="SDAR"),
                      Unite=replace(Unite,which(Unite == "LEPSE/IPSiM"),values="LEPSE/IPSIM")
                    ) %>%
                    left_join(count.eff,by=c("num_bat","Unite"))

sort(unique(myoccup.gaillarde$Unite))

# Nombre de ligne par batiments dans le fichier d'occupation de la Gaillarde
table(myoccup.gaillarde$num_bat)

# Nombre de lignes par unité sur site de la gaillarde
table(myoccup.gaillarde$Unite)
```

* Nombre de batiments avec personnel INRAE dans le centre de La Gaillarde: `r length(table(myoccup.gaillarde$num_bat))`

### Metrage ajusté par unité

```{r}
# Calcul par unité du métrage ajusté
resum.occup.gaillarde<-myoccup.gaillarde %>%
                        mutate(
                          Unite2=toupper(Unite),
                          Unite2=replace(Unite2,which(Unite2 %in% c('SDAR MUTUALISÉ','SDAR Mutualisé')),values="SDAR"),
                          Unite2=replace(Unite2,which(Unite2 == "LEPSE/IPSIM"),values="LEPSE/IPSiM")
                          ) %>%
                        group_by(Unite2) %>%
                        summarize(sum_metrage=sum(metrage_unite),
                                  sum_metrage_ajus=sum(metrage_unite_ajus))

sort(unique(resum.occup.gaillarde$Unite2))

datatable(resum.occup.gaillarde)
```


## Fichier Consommations 2024

Importation des feuilles excel des consommations d'énergie (5 types d'énergies différentes) sur le site de la Gaillarde + pas mal de mise en forme des données.

```{r}
#| warning: false
#| message: false

inconso<-"Synthèse evolutions Consommations  10-02-2025.xlsx"
sheets.in<-excel_sheets(paste0(data.dir,"/",inconso))

# Nombre d'onglets à importer
length(sheets.in)
print(sheets.in)

myconso_elec<-as.data.frame(read_excel(path = paste0(data.dir,"/",inconso),
                   sheet=1,na=c("ND","NA")))
myconso_eau<-as.data.frame(read_excel(path = paste0(data.dir,"/",inconso),
                   sheet=2,na=c("ND","NA")))
myconso_gaz<-as.data.frame(read_excel(path = paste0(data.dir,"/",inconso),
                   sheet=3,na=c("ND","NA")))
myconso_reseau<-as.data.frame(read_excel(path = paste0(data.dir,"/",inconso),
                   sheet=4,na=c("ND","NA")))
myconso_fod<-as.data.frame(read_excel(path = paste0(data.dir,"/",inconso),
                   sheet=5,na=c("ND","NA")))

```

```{r}
#| warning: false
#| message: false
names(myconso_elec)<-c("batiment","2020_Conso_kWh","2021_Conso_kWh",
                       "2022_Conso_kWh","2023_Conso_kWh","2024_Conso_kWh",
                       "Evol_2023/2024p","Evol_2023/2024","Evol_2021/2024","Remarques")
names(myconso_fod)<-c("batiment","2023_Conso_kWh","2024_Conso_kWh",
                       "Evol_2023/2024","Evol_2023/2024p","Remarques")
names(myconso_gaz)<-c("batiment","2023_Conso_kWh","2024_Conso_kWh",
                       "Evol_2023/2024","Evol_2023/2024p","Remarques")
names(myconso_reseau)<-c("batiment","NA","2023_Conso","2024_Conso",
                       "Evol_2023/2024","Evol_2023/2024p","Remarques")
names(myconso_eau)<-c("batiment","2020_Conso","2021_Conso","2022_Conso",
                      "2023_Conso","2024_Conso","Evol_2023/2024",
                      "Evol_2023/2024p","Remarques","V10","V11")

str(myconso_elec)
str(myconso_eau)
str(myconso_gaz)
myconso_reseau<-myconso_reseau[,-2]
str(myconso_reseau)
str(myconso_fod)
```

### data-management des données de consommations

```{r}
#| warning: false
#| message: false
# batiment avec fuel
myconso_fod <- myconso_fod %>%
                mutate(num_bat=c("0290","0310","0030"))

# batiment avec electricité
myconso_elec$num_bat<-substr(myconso_elec[,1],5,8)

# A REVOIR: somme de la ligne du batiment 0110 (restauration et hors restauration)
myconso_elec<-myconso_elec %>%
                group_by(num_bat) %>%
                summarise(across(where(is.numeric), \(x) sum(x, na.rm = TRUE)))

# batiment avec gaz
myconso_gaz$num_bat<-substr(myconso_gaz[,1],5,8)

# batiment avec geothermie
myconso_reseau$num_bat<-substr(myconso_reseau[,1],5,8)

# batiment avec eau
myconso_eau$num_bat<-substr(myconso_eau[,1],5,8)

```

```{r}
# Batiments utilisant de l'électricité
table(myconso_elec$num_bat)
# Batiments utilisant du gaz
table(myconso_gaz$num_bat)
# Batiments utilisant de l'eau
table(myconso_eau$num_bat)
# Batiments utilisant du fuel
table(myconso_fod$num_bat)
# Batiments utilisant de la geothermie
table(myconso_reseau$num_bat)
```



```{r}
# jointure consommation - état énergétique
myconso_elec2<-left_join(myconso_elec,myetat,by="num_bat")
myconso_gaz2<-left_join(myconso_gaz,myetat,by="num_bat")
myconso_fod2<-left_join(myconso_fod,myetat,by="num_bat")
myconso_reseau2<-left_join(myconso_reseau,myetat,by="num_bat")
myconso_eau2<-left_join(myconso_eau,myetat,by="num_bat")

# jointure consommation - occupation sols
myconso_elec2<-left_join(myconso_elec2,myoccup.gaillarde,by="num_bat")
myconso_gaz2<-left_join(myconso_gaz2,myoccup.gaillarde,by="num_bat")
myconso_fod2<-left_join(myconso_fod2,myoccup.gaillarde,by="num_bat")
myconso_reseau2<-left_join(myconso_reseau2,myoccup.gaillarde,by="num_bat",relationship = "many-to-many")
myconso_eau2<-left_join(myconso_eau2,myoccup.gaillarde,by="num_bat",relationship = "many-to-many")

# Transposition par année de consommation (pour les graphs)
myconso_elec3<-pivot_longer(myconso_elec2,cols=2:6,names_to="Consommation")
myconso_gaz3<-pivot_longer(myconso_gaz2,cols=2:3,names_to="Consommation")

# Suppression irrigation et restauration
myconso_elec2<-myconso_elec2[!myconso_elec2$num_bat %in% c("irag"),]
myconso_eau2<-myconso_eau2[!myconso_eau2$num_bat %in% c("sage"),]

```

* Nombre batiments utilisant une énergie au gaz: `r nrow(myconso_gaz)`
* Nombre batiments utilisant une énergie électricité: `r nrow(myconso_elec)`
* Nombre batiments utilisant une énergie au fuel: `r nrow(myconso_fod)`
* Nombre batiments utilisant une énergie géothermique: `r nrow(myconso_reseau)`
* Nombre batiments utilisant une énergie eau: `r nrow(myconso_eau)`


### Consommation en gaz globale au cours du temps

```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
ggplot(myconso_gaz3,aes(x=num_bat,y=value,group=Consommation)) +
  geom_bar(stat = 'identity', aes(fill=Consommation),
           position="dodge") +
  geom_text(aes(label = etat_energie), position = position_dodge(0.9)) + 
  theme(axis.text.x = element_text(angle = 90)) +
  ggtitle("Consommation en gaz - Centre de la gaillarde")
```

```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
ggplot(myconso_gaz3,aes(x=num_bat,y=value,group=Consommation)) +
  geom_bar(stat = 'identity', aes(fill=Consommation),
           position="dodge") +
  geom_text(aes(label = etat_energie), position = position_dodge(0.9)) + 
  theme(axis.text.x = element_text(angle = 90)) +
  ylim(0,200000) +
  ggtitle("Consommation en gaz - Centre de la gaillarde")
```

### Consommation en électricité globale au cours du temps

```{r, fig.width=12, fig.height=8,warning=FALSE,message=FALSE}
#| warning: false
#| message: false
ggplot(myconso_elec3,aes(x=num_bat,y=value,group=Consommation)) +
  geom_bar(stat = 'identity', aes(fill=Consommation),
           position="dodge") +
  geom_text(aes(label = etat_energie), position = position_dodge(0.9)) + 
  theme(axis.text.x = element_text(angle = 90)) +
  ggtitle("Consommation en électricité (kw/h) - Centre de la gaillarde")
```

```{r, fig.width=12, fig.height=8,warning=FALSE,message=FALSE}
#| warning: false
#| message: false
ggplot(myconso_elec3,aes(x=num_bat,y=value,group=Consommation)) +
  geom_bar(stat = 'identity', aes(fill=Consommation),
           position="dodge") +
  geom_text(aes(label = etat_energie), position = position_dodge(0.9)) + 
  theme(axis.text.x = element_text(angle = 90)) +
  ylim(0,1000000) +
  ggtitle("Consommation en électricité (kw/h) - Centre de la gaillarde -  conso < 1000000")
```

# Calcul coût énergétique annuel global

Ici, je calcule un **coût global**. Par la suite, je vais calculer le cout par batiment et unité puis tenter d'ajouter des règles de pondération par etat énergétique et ratio d'occupation.

**Ce coût global est donc une information qui permettra d'être recoupé plus finement.**

Je me suis servi des indications apportés dans un mail pour MLV. Coûts au kwh et m3 voici ce que je peux donner à ce jour (en HT) :

* EDF : 0.09 cts kwh -source coût unitaire 2021 calculé dans le Redevance école (RE) à l’époque et refacturé aux umr de LG,
* GAZ : 0.07 cts KWH -source coût unitaire 2021 du Site INRAE-La Valette-361 suite GT2023 avec les DU de GEAU et ITAP (car coûts sur RE 2021 non fiables)
* FOD : 0,32 € cts kwh -source coût unitaire 2021 calculé dans le Redevance école (RE) à l’époque et refacturé aux umr de LG,
* Eau : 3.5 € au m3 pour 2025 mais à revoir car Kahina n’a pas tenu compte du montant HT de la facture/m 3-je reverrai ceci avec elle pour ajuster.
* Réseau : non communiqué à ce jour par le SPA. Pour la simulation, je propose de prendre le coût « gaz » ci-dessus.

```{r}
# fonction de calcul prix global
myprix<-function(coef1,prix_kwh,input_col,input_pct){
  tp1<-sum(input_col * prix_kwh * coef1)
  tp2<-tp1 * input_pct
  return(c(tp1,tp2))
}

# Calcul prix total élec
ct_edf<-0.09
ct_gaz<-0.07
ct_fod<-0.32
ct_eau<-3.5
ct_reseau<-0.07

prix.elec  <-myprix(coef1=1.5,prix_kwh=ct_edf,input_col=myconso_elec$`2024_Conso_kWh`,input_pct=0.6)
prix.gaz   <-myprix(coef1=1.5,prix_kwh=ct_gaz,input_col=myconso_gaz$`2024_Conso_kWh`,input_pct=0.6)
prix.eau   <-myprix(coef1=1,  prix_kwh=ct_eau,input_col=myconso_eau$`2024_Conso`,input_pct=0.6)
prix.fod   <-myprix(coef1=1.5,prix_kwh=ct_fod,input_col=myconso_fod$`2024_Conso_kWh`,input_pct=0.6)
prix.reseau<-myprix(coef1=1.5,prix_kwh=ct_reseau,input_col=myconso_reseau$`2024_Conso`,input_pct=0.6)

# prix électricité
prix.elec

# prix gaz
prix.gaz

# prix eau
prix.eau

# prix fuel
prix.fod

# prix geothermie
prix.reseau

# prix total (avec géothermie)
prix.elec + prix.gaz + prix.eau + prix.fod + prix.reseau

# prix total (sans geothermie)
prix.elec + prix.gaz + prix.eau + prix.fod

```

# Ventilation coût INRAE suivant occupation des sols

::: {style="background-color:rgba(0, 255, 0,0.1); text-align:left; vertical-align: center; padding:10px 0;"}

**INSERER CALCUL VENTILATION: prise en compte, prix global (60%) etat energetique et occupation bat**

Je commence déjà à calculer la consommation de chaque fluide par batiment et unité pondéré par le metrage ajusté. Puis je rajouterai l'infor du taux d'occupation des laocaux et aussi l'état énergétique du batiment.

Signification des colonnes (exemple pour l'electricité):

* **count_pers**: nombre de personnes INRAE dans une unité par batiment, extrait de fichier `Effectif`
* pers_unite: nombre de personnes global (INRAE, IA etc...) dans une unité par batiment, calculé depuis le fichier d'occupation
* ratio_metre=metrage_unite_ajus / metrage_batiment : taux occupation d'une unité par agents INRAE dans batiment
* conso_elec2024_kwh = `2024_Conso_kWh` * ratio_metre : conso 2024 pondéré par taux d'occupation
* cout_elec2024=conso_elec2024_kwh * 0.09 * 1.5: cout 2024 avec le oeff et le cout /h appliqué
* cout_par_m2=cout_elec2024 / metrage_unite_ajus: le cout par m2 (en 2024)
* cout_par_pers=cout_elec2024 / count_pers : le cout par personne dans unité et batiment (en 2024)

:::


```{r,fig.height=10,fig.width=10,warning=FALSE}
fng_plotly<-function(dataIn,varX,varY,varSize,typeEnergy){
  mycolor<-rainbow(length(unique(dataIn$Unite)))
  g1<-ggplot(dataIn,aes(x=.data[[varX]],y=.data[[varY]],
                             size = .data[[varSize]],colour = Unite,
                             text=paste("Energie: ", typeEnergy, "<br>",
                                "Batiment: ", num_bat, "<br>", 
                                "Unite: ", Unite, "<br>",
                                "etat_energie: ", etat_energie, "<br>", 
                                "Personnes: ", count_pers, "<br>",sep = ""))
           ) +  geom_point() + scale_color_manual(values=mycolor)

return(ggplotly(g1,tooltip="text"))
}

##-----------------
myconso_elec2<-myconso_elec2 %>%
                  mutate(ratio_metre=metrage_unite_ajus / metrage_batiment,
                       conso_elec2024_kwh = `2024_Conso_kWh` * ratio_metre,
                       cout_elec2024=conso_elec2024_kwh * ct_edf * 1.5,
                       cout_par_m2=cout_elec2024 / metrage_unite_ajus,
                       cout_par_pers=cout_elec2024 / count_pers)

fng_plotly(dataIn=myconso_elec2,varX="etat_energie",varY="cout_elec2024",
           varSize="count_pers",typeEnergy="Electricité")

##-----------------
myconso_gaz2<-myconso_gaz2 %>%
                mutate(ratio_metre=metrage_unite_ajus / metrage_batiment,
                       conso_gaz2024_kwh = `2024_Conso_kWh` * ratio_metre,
                       cout_gaz2024=conso_gaz2024_kwh * ct_gaz * 1.5,
                       cout_par_m2=cout_gaz2024 / metrage_unite_ajus,
                       cout_par_pers=cout_gaz2024 / count_pers)

fng_plotly(dataIn=myconso_gaz2,varX="etat_energie",varY="cout_gaz2024",
           varSize="count_pers",typeEnergy="Gaz")

##-----------------
myconso_eau2<-myconso_eau2 %>%
                mutate(ratio_metre=metrage_unite_ajus / metrage_batiment,
                       conso_eau2024 = `2024_Conso` * ratio_metre,
                       cout_eau2024=conso_eau2024 * ct_eau * 1,
                       cout_par_m2=cout_eau2024 / metrage_unite_ajus,
                       cout_par_pers=cout_eau2024 / count_pers)

fng_plotly(dataIn=myconso_eau2,varX="etat_energie",varY="cout_eau2024",
           varSize="count_pers",typeEnergy="Eau")

##-----------------
myconso_fod2<-myconso_fod2 %>%
                mutate(ratio_metre=metrage_unite_ajus / metrage_batiment,
                       conso_fod2024 = `2024_Conso_kWh` * ratio_metre,
                       cout_fod2024=conso_fod2024 * ct_fod * 1.5,
                       cout_par_m2=cout_fod2024 / metrage_unite_ajus,
                       cout_par_pers=cout_fod2024 / count_pers)

fng_plotly(dataIn=myconso_fod2,varX="etat_energie",varY="cout_fod2024",
           varSize="count_pers",typeEnergy="FOD")

##-----------------
myconso_reseau2<-myconso_reseau2 %>%
                mutate(ratio_metre=metrage_unite_ajus / metrage_batiment,
                       conso_reseau2024 = `2024_Conso` * ratio_metre,
                       cout_reseau2024=conso_reseau2024 * ct_reseau * 1.5,
                       cout_par_m2=cout_reseau2024 / metrage_unite_ajus,
                       cout_par_pers=cout_reseau2024 / count_pers)

fng_plotly(dataIn=myconso_reseau2,varX="etat_energie",varY="cout_reseau2024",
           varSize="count_pers",typeEnergy="Reseau")

```

# Consommation par batiment /m²

::: {style="background-color:rgba(0, 255, 0,0.1); text-align:left; vertical-align: center; padding:10px 0;"}
Calcul de la consommation en énergie par batiment et par m2, en 2024. Je me sers pour cela des colonnes `2024_Conso` et `metrage_batiment` avec comme clé le numéro de batiment `num_bat`.

:::

```{r, echo=FALSE}
myconso_elec_bat<- myconso_elec2 %>%
                    select(num_bat,`2024_Conso_kWh`,etat_energie,
                           metrage_batiment) %>%
                    distinct(num_bat,.keep_all = TRUE) %>%
                    mutate(conso_elec_m2_kWh=`2024_Conso_kWh` / metrage_batiment,
                           cout_elec=conso_elec_m2_kWh * ct_edf * 1.5)

myconso_gaz_bat<- myconso_gaz2 %>%
                    select(num_bat,`2024_Conso_kWh`,etat_energie,
                           metrage_batiment) %>%
                    distinct(num_bat,.keep_all = TRUE) %>%
                    mutate(conso_gaz_m2_kWh=`2024_Conso_kWh` / metrage_batiment,
                           cout_gaz=conso_gaz_m2_kWh * ct_gaz * 1.5)

myconso_fod_bat<- myconso_fod2 %>%
                    select(num_bat,`2024_Conso_kWh`,etat_energie,
                           metrage_batiment) %>%
                    distinct(num_bat,.keep_all = TRUE) %>%
                    mutate(conso_fod_m2_kWh=`2024_Conso_kWh` / metrage_batiment,
                           cout_fod=conso_fod_m2_kWh * ct_fod * 1.5)

myconso_eau_bat<- myconso_eau2 %>%
                    select(num_bat,`2024_Conso`,etat_energie,
                           metrage_batiment) %>%
                    distinct(num_bat,.keep_all = TRUE) %>%
                    mutate(conso_eau_m2=`2024_Conso` / metrage_batiment,
                           cout_eau=conso_eau_m2 * ct_eau * 1)

myconso_reseau_bat<- myconso_reseau2 %>%
                    select(num_bat,`2024_Conso`,etat_energie,
                           metrage_batiment) %>%
                    distinct(num_bat,.keep_all = TRUE) %>%
                    mutate(conso_reseau_m2=`2024_Conso` / metrage_batiment,
                           cout_reseau=conso_reseau_m2 * ct_reseau * 1.5)

myconso_parbat <- full_join(select(myconso_elec_bat,num_bat,etat_energie,
                                   metrage_batiment,conso_elec_m2_kWh,cout_elec),
                            select(myconso_gaz_bat,num_bat,conso_gaz_m2_kWh,cout_gaz),by="num_bat")
myconso_parbat <- full_join(myconso_parbat,select(myconso_eau_bat,num_bat,conso_eau_m2,cout_eau),by="num_bat")
myconso_parbat <- full_join(myconso_parbat,select(myconso_fod_bat,num_bat,conso_fod_m2_kWh,cout_fod),by="num_bat")
myconso_parbat <- full_join(myconso_parbat,select(myconso_reseau_bat,num_bat,conso_reseau_m2,cout_reseau),by="num_bat")

# somme du cout de toutes les énergies par batiment
myconso_parbat <- myconso_parbat %>%
                    mutate(cout_global_bat=rowSums(across(starts_with("cout")),na.rm=TRUE))

datatable(myconso_parbat,options = list(scrollX=TRUE))

```

```{r}
fun_gg_parbat<-function(indata,mycol,mytitre){
  ggplot(indata,aes(x=num_bat,y=.data[[mycol]],fill=etat_energie)) +
  geom_bar(stat = 'identity', aes(fill=etat_energie),
           position="dodge") +
  geom_text(aes(label = etat_energie), position = position_dodge(0.9)) + 
  theme(axis.text.x = element_text(angle = 90)) +
  scale_fill_gradientn(colours = turbo(10)) +
  ggtitle(paste0("Consommation en ",mytitre," par batiment et m2 - Centre de la gaillarde"))
}
```


```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
fun_gg_parbat(indata=myconso_parbat,mycol="conso_elec_m2_kWh",
              mytitre="électricité (kw/h)")
```

```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
fun_gg_parbat(indata=myconso_parbat,mycol="conso_gaz_m2_kWh",
              mytitre="gaz (kw/h)")
```

```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
fun_gg_parbat(indata=myconso_parbat,mycol="conso_eau_m2",
              mytitre="eau (m3)")
```

```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
fun_gg_parbat(indata=myconso_parbat,mycol="conso_fod_m2_kWh",
              mytitre="fuel (kw/h)")
```

```{r, fig.width=12, fig.height=8}
#| warning: false
#| message: false
fun_gg_parbat(indata=myconso_parbat,mycol="conso_reseau_m2",
              mytitre="reseau")
```


# Consommation par unité /m²

::: {style="background-color:rgba(0, 255, 0,0.1); text-align:left; vertical-align: center; padding:10px 0;"}
Calcul de la consommation en énergie par **unité** par m2, en 2024. Je me sers pour cela des colonnes `2024_Conso` et `metrage_unite_ajus` au proprata du `metrage_batiment` avec comme clé le nom de l'unité `Unite`.

:::

```{r, echo=FALSE}
myconso_elec_unite<- myconso_elec2 %>%
                    select(num_bat,Unite,`2024_Conso_kWh`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_elec_m2_kWh=`2024_Conso_kWh` * metrage_unite_ajus / metrage_batiment,
                           cout_elec=conso_elec_m2_kWh * ct_edf * 1.5) %>%
                    group_by(Unite) %>%
                    summarise(conso_elec_m2_kWh=sum(conso_elec_m2_kWh),
                              cout_elec=sum(cout_elec)) %>%
                    na.omit()

myconso_gaz_unite<- myconso_gaz2 %>%
                    select(num_bat,Unite,`2024_Conso_kWh`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_gaz_m2_kWh=`2024_Conso_kWh` * metrage_unite_ajus / metrage_batiment,
                           cout_gaz=conso_gaz_m2_kWh * ct_gaz * 1.5) %>%
                    group_by(Unite) %>%
                    summarise(conso_gaz_m2_kWh=sum(conso_gaz_m2_kWh),
                              cout_gaz=sum(cout_gaz)) %>%
                    na.omit()

myconso_fod_unite<- myconso_fod2 %>%
                    select(num_bat,Unite,`2024_Conso_kWh`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_fod_m2_kWh=`2024_Conso_kWh` * metrage_unite_ajus / metrage_batiment,
                           cout_fod=conso_fod_m2_kWh * ct_fod * 1.5) %>%
                    group_by(Unite) %>%
                    summarise(conso_fod_m2_kWh=sum(conso_fod_m2_kWh),
                              cout_fod=sum(cout_fod)) %>%
                    na.omit() %>%
                    na.omit()

myconso_eau_unite<- myconso_eau2 %>%
                    select(num_bat,Unite,`2024_Conso`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_eau_m2=`2024_Conso` * metrage_unite_ajus / metrage_batiment,
                           cout_eau=conso_eau_m2 * ct_eau * 1) %>%
                    group_by(Unite) %>%
                    summarise(conso_eau_m2=sum(conso_eau_m2),
                              cout_eau=sum(cout_eau)) %>%
                    na.omit()

myconso_reseau_unite<- myconso_reseau2 %>%
                    select(num_bat,Unite,`2024_Conso`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_reseau_m2=`2024_Conso` * metrage_unite_ajus / metrage_batiment,
                           cout_reseau=conso_reseau_m2 * ct_reseau * 1.5) %>%
                    group_by(Unite) %>%
                    summarise(conso_reseau_m2=sum(conso_reseau_m2),
                              cout_reseau=sum(cout_reseau))

myconso_parunite <- full_join(myconso_elec_unite,myconso_gaz_unite,by="Unite")
myconso_parunite <- full_join(myconso_parunite,myconso_eau_unite,by="Unite")
myconso_parunite <- full_join(myconso_parunite,myconso_fod_unite,by="Unite")
myconso_parunite <- full_join(myconso_parunite,myconso_reseau_unite,by="Unite")

# Redistribution des consommations des les lieux communs
myconso_parunite<-myconso_parunite %>%
                    mutate(countU=str_count(myconso_parunite$Unite,"/")+1) 
myconso_parunite<-as.data.frame(myconso_parunite)

vecUnite<-unique(myconso_parunite$Unite)
vecUnite<-vecUnite[-grep(pattern="/",vecUnite)]

conso_elec_m2_kWhb<-vector("numeric",length(vecUnite))
conso_gaz_m2_kWhb<-vector("numeric",length(vecUnite))
conso_eau_m2b<-vector("numeric",length(vecUnite))
conso_fod_m2_kWhb<-vector("numeric",length(vecUnite))
conso_reseau_m2b<-vector("numeric",length(vecUnite))

for (i in seq_along(vecUnite)){
  for (j in 1:nrow(myconso_parunite)){
      if (length(grep(pattern=vecUnite[i],myconso_parunite[j,"Unite"])) != 0){
        conso_elec_m2_kWhb[i]<-conso_elec_m2_kWhb[i] + 
                      myconso_parunite[j,"conso_elec_m2_kWh"] / myconso_parunite[j,"countU"]
        conso_gaz_m2_kWhb[i]<-conso_gaz_m2_kWhb[i] + 
                      myconso_parunite[j,"conso_gaz_m2_kWh"] / myconso_parunite[j,"countU"]
        conso_eau_m2b[i]<-conso_eau_m2b[i] + 
                      myconso_parunite[j,"conso_eau_m2"] / myconso_parunite[j,"countU"]
        conso_fod_m2_kWhb[i]<-conso_fod_m2_kWhb[i] + 
                      myconso_parunite[j,"conso_fod_m2_kWh"] / myconso_parunite[j,"countU"]
        conso_reseau_m2b[i]<-conso_reseau_m2b[i] + 
                      myconso_parunite[j,"conso_reseau_m2"] / myconso_parunite[j,"countU"]
      }
  } 
}

myconso_parunite2<-cbind.data.frame(vecUnite,conso_elec_m2_kWhb,
                                    conso_gaz_m2_kWhb,conso_eau_m2b,
                                    conso_fod_m2_kWhb,conso_reseau_m2b)

# somme du cout de toutes les énergies par unite
myconso_parunite <- myconso_parunite %>%
                    mutate(cout_global_unite=rowSums(across(starts_with("cout")),na.rm=TRUE))

datatable(myconso_parunite,options = list(scrollX=TRUE))

```


# Consommation par batiment et unité /m²

::: {style="background-color:rgba(0, 255, 0,0.1); text-align:left; vertical-align: center; padding:10px 0;"}
Calcul de la consommation en énergie par **batiment et unité** par m2, en 2024. Je me sers pour cela des colonnes `2024_Conso` et `metrage_unite_ajus` au proprata du `metrage_batiment` avec comme clé le numéro de batiment `num_bat` et le nom de l'unité `Unite`.

:::

```{r, echo=FALSE}
#| warning: false
#| message: false
myconso_elec_batu<- myconso_elec2 %>%
                    select(num_bat,Unite,`2024_Conso_kWh`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_elec_m2_kWh=`2024_Conso_kWh` * metrage_unite_ajus / metrage_batiment,
                           cout_elec=conso_elec_m2_kWh * ct_edf * 1.5) %>%
                    group_by(num_bat,Unite) %>%
                    summarise(conso_elec_m2_kWh=sum(conso_elec_m2_kWh),
                              cout_elec=sum(cout_elec))

myconso_gaz_batu<- myconso_gaz2 %>%
                    select(num_bat,Unite,`2024_Conso_kWh`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_gaz_m2_kWh=`2024_Conso_kWh` * metrage_unite_ajus / metrage_batiment,
                           cout_gaz=conso_gaz_m2_kWh * ct_gaz * 1.5) %>%
                    group_by(num_bat,Unite) %>%
                    summarise(conso_gaz_m2_kWh=sum(conso_gaz_m2_kWh),
                              cout_gaz=sum(cout_gaz))

myconso_fod_batu<- myconso_fod2 %>%
                    select(num_bat,Unite,`2024_Conso_kWh`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_fod_m2_kWh=`2024_Conso_kWh` * metrage_unite_ajus / metrage_batiment,
                           cout_fod=conso_fod_m2_kWh * ct_fod * 1.5) %>%
                    group_by(num_bat,Unite) %>%
                    summarise(conso_fod_m2_kWh=sum(conso_fod_m2_kWh),
                              cout_fod=sum(cout_fod))

myconso_eau_batu<- myconso_eau2 %>%
                    select(num_bat,Unite,`2024_Conso`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_eau_m2=`2024_Conso` * metrage_unite_ajus / metrage_batiment,
                           cout_eau=conso_eau_m2 * ct_eau * 1) %>%
                    group_by(num_bat,Unite) %>%
                    summarise(conso_eau_m2=sum(conso_eau_m2),
                              cout_eau=sum(cout_eau))

myconso_reseau_batu<- myconso_reseau2 %>%
                    select(num_bat,Unite,`2024_Conso`,etat_energie,
                           metrage_unite_ajus,metrage_batiment,count_pers) %>%
                    mutate(conso_reseau_m2=`2024_Conso` * metrage_unite_ajus / metrage_batiment,
                           cout_reseau=conso_reseau_m2 * ct_reseau * 1.5) %>%
                    group_by(num_bat,Unite) %>%
                    summarise(conso_reseau_m2=sum(conso_reseau_m2),
                              cout_reseau=sum(cout_reseau))

myconso_parbatunite <- full_join(myconso_elec_batu,myconso_gaz_batu,by=c("num_bat","Unite"))
myconso_parbatunite <- full_join(myconso_parbatunite,myconso_eau_batu,by=c("num_bat","Unite"))
myconso_parbatunite <- full_join(myconso_parbatunite,myconso_fod_batu,by=c("num_bat","Unite"))
myconso_parbatunite <- full_join(myconso_parbatunite,myconso_reseau_batu,by=c("num_bat","Unite"))
# suppress ligne sans unité dans batiment
myconso_parbatunite<-myconso_parbatunite[!is.na(myconso_parbatunite$Unite),]

# Redistribution des consommations des lieux communs
# et creation d'une clé batu == bat+unite
myconso_parbatunite<-as.data.frame(myconso_parbatunite)
myconso_parbatunite<-myconso_parbatunite %>%
                    mutate(countU=str_count(myconso_parbatunite$Unite,"/") + 1,
                           batu=paste(num_bat,Unite,sep="-"))

vecBat<-unique(myconso_parbatunite$num_bat)
vecUnite<-unique(myconso_parbatunite$Unite)
vecUnite<-vecUnite[-grep(pattern="/",vecUnite)]
vecBatu<-unique(myconso_parbatunite$batu)
vecBatu<-vecBatu[-grep(pattern="/",vecBatu)]

conso_elec_m2_kWhb<-vector("numeric",length(vecBatu))
conso_gaz_m2_kWhb<-vector("numeric",length(vecBatu))
conso_eau_m2b<-vector("numeric",length(vecBatu))
conso_fod_m2_kWhb<-vector("numeric",length(vecBatu))
conso_reseau_m2b<-vector("numeric",length(vecBatu))

for (k in seq_along(vecBat)){
  for (i in seq_along(vecUnite)){
    for (j in 1:nrow(myconso_parbatunite)){
      if (length(grep(pattern=vecUnite[i],myconso_parbatunite[j,"batu"])) != 0 &
          length(grep(pattern=vecBat[k],myconso_parbatunite[j,"batu"])) != 0){
          key=paste(vecBat[k],vecUnite[i],sep="-")
          for (k2 in seq_along(vecBatu)){
              if (key == vecBatu[k2]){
                conso_elec_m2_kWhb[k2]<-conso_elec_m2_kWhb[k2] +
                      myconso_parbatunite[j,"conso_elec_m2_kWh"] / myconso_parbatunite[j,"countU"]
                conso_gaz_m2_kWhb[k2]<-conso_gaz_m2_kWhb[k2] +
                      myconso_parbatunite[j,"conso_gaz_m2_kWh"] / myconso_parbatunite[j,"countU"]
                conso_eau_m2b[k2]<-conso_eau_m2b[k2] +
                      myconso_parbatunite[j,"conso_eau_m2"] / myconso_parbatunite[j,"countU"]
                conso_fod_m2_kWhb[k2]<-conso_fod_m2_kWhb[k2] +
                      myconso_parbatunite[j,"conso_fod_m2_kWh"] / myconso_parbatunite[j,"countU"]
                conso_reseau_m2b[k2]<-conso_reseau_m2b[k2] +
                      myconso_parbatunite[j,"conso_reseau_m2"] / myconso_parbatunite[j,"countU"]
              }
          }
      }
    }
  }
}

myconso_parbatunite2<-cbind.data.frame(vecBatu,conso_elec_m2_kWhb,
                                    conso_gaz_m2_kWhb,conso_eau_m2b,
                                    conso_fod_m2_kWhb,conso_reseau_m2b)

# somme du cout de toutes les énergies par batiment et unite
myconso_parbatunite <- myconso_parbatunite %>%
                    mutate(cout_global_batunite=rowSums(across(starts_with("cout")),na.rm=TRUE))

datatable(myconso_parbatunite,options = list(scrollX=TRUE))

```


# Exports des fichiers avec les jointures

::: {style="background-color:rgba(0, 255, 0,0.1); text-align:left; vertical-align: center; padding:10px 0;"}

Les datasets créés sont exportés dans des classeurs excel pour faciliter la manipulation et la vérification des calculs:

* `2025_export_aggregation_energies_consommees.xlsx`: contient une feuille par type d'énergie (soit 5 feuilles) avec les consommations aggrégées suivant les metrages ajustés ou pa et toutes les caractéristiques des batiments
* `2025_export_stats_energies_consommees.xlsx`: contient les consommations d'énergie répatient par `Batiment` (1 feuille), par `unité` (2 feuilles) et par `batiment et unité` (2 feuilles). La 1ere feuille est avec les lignes décrivant les lieux communs lorsqu'il y a partage de locaux, la 2e feuille est soit par unité, soit par batiment et unité en ventilant le cout des lieux communs partagés (divisés par 2 si 2 unités dans les mêmes locaux, divisés par 3 si 3 unités dans les mêmes locaux)

Signification des colonnes (exemple pour l'electricité):

* **count_pers**: nombre de personnes INRAE dans une unité par batiment, extrait de fichier `Effectif`
* pers_unite: nombre de personnes global (INRAE, IA etc...) dans une unité par batiment, calculé depuis le fichier d'occupation
* ratio_metre=metrage_unite_ajus / metrage_batiment : taux occupation d'une unité par agents INRAE dans batiment
* conso_elec2024_kwh = `2024_Conso_kWh` * ratio_metre : conso 2024 pondéré par taux d'occupation
* cout_elec2024=conso_elec2024_kwh * 0.09 * 1.5: cout 2024 avec le oeff et le cout /h appliqué
* cout_par_m2=cout_elec2024 / metrage_unite_ajus: le cout par m2 (en 2024)
* cout_par_pers=cout_elec2024 / count_pers : le cout par personne dans unité et batiment (en 2024)
* correlation_etat=cor(etat_energie,cout_gaz2024): correlation entre le cout et l'etat énergétique du batiment
* correlation_pers=cor(count_pers,cout_gaz2024): correlation entre le cout et le nombre de personnes dans l'unité

:::


```{r}
write_xlsx(list(Elect = myconso_elec2,
                Gaz   = myconso_gaz2,
                Eau   = myconso_eau2,
                FOD   = myconso_fod2,
                Reseau = myconso_reseau2
                ),
           "2025_export_aggregation_energies_consommees.xlsx")

write_xlsx(list(`Par Batiments`               = myconso_parbat,
                `Par Unites`                  = myconso_parunite,
                `Par batiment et unites`      = myconso_parbatunite
                ),
           "2025_export_stats_energies_consommees.xlsx")

```


